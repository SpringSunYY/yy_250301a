<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.manage.mapper.PurchaseOrderInfoMapper">

    <resultMap type="PurchaseOrderInfo" id="PurchaseOrderInfoResult">
        <result property="id" column="id"/>
        <result property="orderNumber" column="order_number"/>
        <result property="orderType" column="order_type"/>
        <result property="orderProfit" column="order_profit"/>
        <result property="orderProfitRate" column="order_profit_rate"/>
        <result property="purchaseTime" column="purchase_time"/>
        <result property="storeId" column="store_id"/>
        <result property="buyerNumber" column="buyer_number"/>
        <result property="salesNumber" column="sales_number"/>
        <result property="salesPrice" column="sales_price"/>
        <result property="purchaseChannelType" column="purchase_channel_type"/>
        <result property="purchaseChannelsId" column="purchase_channels_id"/>
        <result property="purchaseAccountId" column="purchase_account_id"/>
        <result property="purchaseOrder" column="purchase_order"/>
        <result property="supplierName" column="supplier_name"/>
        <result property="purchasePrice" column="purchase_price"/>
        <result property="purchasePremium" column="purchase_premium"/>
        <result property="shipmentsOrder" column="shipments_order"/>
        <result property="hasReturn" column="has_return"/>
        <result property="hasBP" column="has_b_p"/>
        <result property="hasAfterSale" column="has_after_sale"/>
        <result property="userId" column="user_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="deptId" column="dept_id"/>
    </resultMap>

    <sql id="selectPurchaseOrderInfoVo">
        select id,
               order_number,
               order_type,
               order_profit,
               order_profit_rate,
               purchase_time,
               store_id,
               buyer_number,
               sales_number,
               sales_price,
               purchase_channel_type,
               purchase_channels_id,
               purchase_account_id,
               purchase_order,
               supplier_name,
               purchase_price,
               purchase_premium,
               shipments_order,
               has_return,
               has_b_p,
               has_after_sale,
               user_id,
               create_time,
               update_by,
               update_time,
               remark,
               dept_id
        from tb_purchase_order_info
    </sql>

    <select id="selectPurchaseOrderInfoList" parameterType="PurchaseOrderInfo" resultMap="PurchaseOrderInfoResult">
        <include refid="selectPurchaseOrderInfoVo"/>
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="orderNumber != null  and orderNumber != ''">and order_number like concat('%', #{orderNumber},
                '%')
            </if>
            <if test="orderType != null  and orderType != ''">and order_type = #{orderType}</if>
            <if test="params.beginPurchaseTime != null and params.beginPurchaseTime != '' and params.endPurchaseTime != null and params.endPurchaseTime != ''">
                and DATE_FORMAT(purchase_time, '%Y-%m-%d') between #{params.beginPurchaseTime} and
                #{params.endPurchaseTime}
            </if>
            <if test="storeId != null ">and store_id = #{storeId}</if>
            <if test="buyerNumber != null  and buyerNumber != ''">and buyer_number like concat('%', #{buyerNumber},
                '%')
            </if>
            <if test="purchaseChannelType != null  and purchaseChannelType != ''">and purchase_channel_type =
                #{purchaseChannelType}
            </if>
            <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
                and purchase_channels_id in
                <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="purchaseAccountId != null  and purchaseAccountId != ''">and purchase_account_id =
                #{purchaseAccountId}
            </if>
            <if test="purchaseOrder != null  and purchaseOrder != ''">and purchase_order like concat('%',
                #{purchaseOrder}, '%')
            </if>
            <if test="supplierName != null  and supplierName != ''">and supplier_name like concat('%', #{supplierName},
                '%')
            </if>
            <if test="shipmentsOrder != null  and shipmentsOrder != ''">and shipments_order like concat('%',
                #{shipmentsOrder}, '%')
            </if>
            <if test="hasReturn != null  and hasReturn != ''">and has_return = #{hasReturn}</if>
            <if test="hasBP != null  and hasBP != ''">and has_b_p = #{hasBP}</if>
            <if test="hasAfterSale != null  and hasAfterSale != ''">and has_after_sale = #{hasAfterSale}</if>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and DATE_FORMAT(create_time, '%Y-%m-%d') between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
            <if test="updateBy != null  and updateBy != ''">and update_by like concat('%', #{updateBy}, '%')</if>
            <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''">
                and DATE_FORMAT(update_time, '%Y-%m-%d') between #{params.beginUpdateTime} and #{params.endUpdateTime}
            </if>
            <if test="deptIds != null and deptIds.size > 0">
                and dept_id in
                <foreach collection="deptIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
        order by purchase_time desc
    </select>

    <select id="selectPurchaseOrderInfoById" parameterType="Long" resultMap="PurchaseOrderInfoResult">
        <include refid="selectPurchaseOrderInfoVo"/>
        where id = #{id}
    </select>
    <select id="getPurchaseOrderInfoCount"
            resultType="com.lz.manage.model.vo.purchaseOrderInfo.PurchaseOrderInfoCountVo">
        select
        sum(sales_price) as salesPriceCount,
        sum(sales_number) as salesNumberCount,
        sum(purchase_price) as purchasePriceCount,
        sum(purchase_premium) as purchasePremiumCount,
        sum(order_profit) as orderProfitCount,
        avg(order_profit_rate) as avgOrderProfitRate,
        count(id) as orderCount from tb_purchase_order_info
        <where>
            <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
                and purchase_channels_id in
                <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="orderNumber != null  and orderNumber != ''">and order_number like concat('%', #{orderNumber},
                '%')
            </if>
            <if test="orderType != null  and orderType != ''">and order_type = #{orderType}</if>
            <if test="params.beginPurchaseTime != null and params.beginPurchaseTime != '' and params.endPurchaseTime != null and params.endPurchaseTime != ''">
                and DATE_FORMAT(purchase_time, '%Y-%m-%d') between #{params.beginPurchaseTime} and
                #{params.endPurchaseTime}
            </if>
            <if test="storeId != null ">and store_id = #{storeId}</if>
            <if test="buyerNumber != null  and buyerNumber != ''">and buyer_number like concat('%', #{buyerNumber},
                '%')
            </if>
            <if test="purchaseChannelType != null  and purchaseChannelType != ''">and purchase_channel_type =
                #{purchaseChannelType}
            </if>
            <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
                and purchase_channels_id in
                <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="purchaseAccountId != null  and purchaseAccountId != ''">and purchase_account_id =
                #{purchaseAccountId}
            </if>
            <if test="purchaseOrder != null  and purchaseOrder != ''">and purchase_order like concat('%',
                #{purchaseOrder}, '%')
            </if>
            <if test="supplierName != null  and supplierName != ''">and supplier_name like concat('%', #{supplierName},
                '%')
            </if>
            <if test="shipmentsOrder != null  and shipmentsOrder != ''">and shipments_order like concat('%',
                #{shipmentsOrder}, '%')
            </if>
            <if test="hasReturn != null  and hasReturn != ''">and has_return = #{hasReturn}</if>
            <if test="hasBP != null  and hasBP != ''">and has_b_p = #{hasBP}</if>
            <if test="hasAfterSale != null  and hasAfterSale != ''">and has_after_sale = #{hasAfterSale}</if>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and DATE_FORMAT(create_time, '%Y-%m-%d') between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
            <if test="updateBy != null  and updateBy != ''">and update_by like concat('%', #{updateBy}, '%')</if>
            <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''">
                and DATE_FORMAT(update_time, '%Y-%m-%d') between #{params.beginUpdateTime} and #{params.endUpdateTime}
            </if>
            <if test="deptIds != null and deptIds.size > 0">
                and dept_id in
                <foreach collection="deptIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
    </select>
    <select id="getReportGroupByDept"
            resultType="com.lz.manage.model.vo.purchaseOrderInfo.PurchaseOrderReportByDeptVo">
        select
        dept_id as deptId,
        sum(sales_price) as salesPriceCount,
        sum(sales_number) as salesNumberCount,
        sum(purchase_price) as purchasePriceCount,
        sum(purchase_premium) as purchasePremiumCount,
        sum(order_profit) as orderProfitCount,
        avg(order_profit_rate) as avgOrderProfitRate,
        count(id) as orderCount from tb_purchase_order_info
        <where>
            <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
                and purchase_channels_id in
                <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="orderNumber != null  and orderNumber != ''">and order_number like concat('%', #{orderNumber},
                '%')
            </if>
            <if test="orderType != null  and orderType != ''">and order_type = #{orderType}</if>
            <if test="params.beginPurchaseTime != null and params.beginPurchaseTime != '' and params.endPurchaseTime != null and params.endPurchaseTime != ''">
                and DATE_FORMAT(purchase_time, '%Y-%m-%d') between #{params.beginPurchaseTime} and
                #{params.endPurchaseTime}
            </if>
            <if test="storeId != null ">and store_id = #{storeId}</if>
            <if test="buyerNumber != null  and buyerNumber != ''">and buyer_number like concat('%', #{buyerNumber},
                '%')
            </if>
            <if test="purchaseChannelType != null  and purchaseChannelType != ''">and purchase_channel_type =
                #{purchaseChannelType}
            </if>
            <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
                and purchase_channels_id in
                <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="purchaseAccountId != null  and purchaseAccountId != ''">and purchase_account_id =
                #{purchaseAccountId}
            </if>
            <if test="purchaseOrder != null  and purchaseOrder != ''">and purchase_order like concat('%',
                #{purchaseOrder}, '%')
            </if>
            <if test="supplierName != null  and supplierName != ''">and supplier_name like concat('%', #{supplierName},
                '%')
            </if>
            <if test="shipmentsOrder != null  and shipmentsOrder != ''">and shipments_order like concat('%',
                #{shipmentsOrder}, '%')
            </if>
            <if test="hasReturn != null  and hasReturn != ''">and has_return = #{hasReturn}</if>
            <if test="hasBP != null  and hasBP != ''">and has_b_p = #{hasBP}</if>
            <if test="hasAfterSale != null  and hasAfterSale != ''">and has_after_sale = #{hasAfterSale}</if>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and DATE_FORMAT(create_time, '%Y-%m-%d') between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
            <if test="updateBy != null  and updateBy != ''">and update_by like concat('%', #{updateBy}, '%')</if>
            <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''">
                and DATE_FORMAT(update_time, '%Y-%m-%d') between #{params.beginUpdateTime} and #{params.endUpdateTime}
            </if>
            <if test="deptIds != null and deptIds.size > 0">
                and dept_id in
                <foreach collection="deptIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
        group by dept_id
    </select>
    <select id="getServiceReport"
            resultType="com.lz.manage.model.vo.purchaseOrderInfo.PurchaseOrderReportByUserVo">
        SELECT user_id                             AS userId,
               COALESCE(SUM(sales_price), 0)       AS salesPriceCount,
               COALESCE(SUM(sales_number), 0)      AS salesNumberCount,
               COALESCE(SUM(purchase_price), 0)    AS purchasePriceCount,
               COALESCE(SUM(purchase_premium), 0)  AS purchasePremiumCount,
               COALESCE(SUM(order_profit), 0)      AS orderProfitCount,
               COALESCE(AVG(order_profit_rate), 0) AS avgOrderProfitRate,
               COUNT(id)                           AS orderCount
        FROM tb_purchase_order_info
        <where>
            <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
                and purchase_channels_id in
                <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="orderNumber != null  and orderNumber != ''">and order_number like concat('%', #{orderNumber},
                '%')
            </if>
            <if test="orderType != null  and orderType != ''">and order_type = #{orderType}</if>
            <if test="params.beginPurchaseTime != null and params.beginPurchaseTime != '' and params.endPurchaseTime != null and params.endPurchaseTime != ''">
                and DATE_FORMAT(purchase_time, '%Y-%m-%d') between #{params.beginPurchaseTime} and
                #{params.endPurchaseTime}
            </if>
            <if test="storeId != null ">and store_id = #{storeId}</if>
            <if test="buyerNumber != null  and buyerNumber != ''">and buyer_number like concat('%', #{buyerNumber},
                '%')
            </if>
            <if test="purchaseChannelType != null  and purchaseChannelType != ''">and purchase_channel_type =
                #{purchaseChannelType}
            </if>
            <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
                and purchase_channels_id in
                <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="purchaseAccountId != null  and purchaseAccountId != ''">and purchase_account_id =
                #{purchaseAccountId}
            </if>
            <if test="purchaseOrder != null  and purchaseOrder != ''">and purchase_order like concat('%',
                #{purchaseOrder}, '%')
            </if>
            <if test="supplierName != null  and supplierName != ''">and supplier_name like concat('%', #{supplierName},
                '%')
            </if>
            <if test="shipmentsOrder != null  and shipmentsOrder != ''">and shipments_order like concat('%',
                #{shipmentsOrder}, '%')
            </if>
            <if test="hasReturn != null  and hasReturn != ''">and has_return = #{hasReturn}</if>
            <if test="hasBP != null  and hasBP != ''">and has_b_p = #{hasBP}</if>
            <if test="hasAfterSale != null  and hasAfterSale != ''">and has_after_sale = #{hasAfterSale}</if>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and DATE_FORMAT(create_time, '%Y-%m-%d') between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
            <if test="updateBy != null  and updateBy != ''">and update_by like concat('%', #{updateBy}, '%')</if>
            <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''">
                and DATE_FORMAT(update_time, '%Y-%m-%d') between #{params.beginUpdateTime} and #{params.endUpdateTime}
            </if>
            <if test="deptIds != null and deptIds.size > 0">
                and dept_id in
                <foreach collection="deptIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
        group by userId
        order by salesPriceCount desc
    </select>
    <select id="getStoreReport"
            resultType="com.lz.manage.model.vo.purchaseOrderInfo.PurchaseOrderReportByStoreVo">
        select store_id                            as storeId,
               COALESCE(SUM(sales_price), 0)       AS salesPriceCount,
               COALESCE(SUM(sales_number), 0)      AS salesNumberCount,
               COALESCE(SUM(purchase_price), 0)    AS purchasePriceCount,
               COALESCE(SUM(purchase_premium), 0)  AS purchasePremiumCount,
               COALESCE(SUM(order_profit), 0)      AS orderProfitCount,
               COALESCE(AVG(order_profit_rate), 0) AS avgOrderProfitRate,
               COUNT(id)                           AS orderCount
        from tb_purchase_order_info
        <where>
            <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
                and purchase_channels_id in
                <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="orderNumber != null  and orderNumber != ''">and order_number like concat('%', #{orderNumber},
                '%')
            </if>
            <if test="orderType != null  and orderType != ''">and order_type = #{orderType}</if>
            <if test="params.beginPurchaseTime != null and params.beginPurchaseTime != '' and params.endPurchaseTime != null and params.endPurchaseTime != ''">
                and DATE_FORMAT(purchase_time, '%Y-%m-%d') between #{params.beginPurchaseTime} and
                #{params.endPurchaseTime}
            </if>
            <if test="storeId != null ">and store_id = #{storeId}</if>
            <if test="buyerNumber != null  and buyerNumber != ''">and buyer_number like concat('%', #{buyerNumber},
                '%')
            </if>
            <if test="purchaseChannelType != null  and purchaseChannelType != ''">and purchase_channel_type =
                #{purchaseChannelType}
            </if>
            <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
                and purchase_channels_id in
                <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="purchaseAccountId != null  and purchaseAccountId != ''">and purchase_account_id =
                #{purchaseAccountId}
            </if>
            <if test="purchaseOrder != null  and purchaseOrder != ''">and purchase_order like concat('%',
                #{purchaseOrder}, '%')
            </if>
            <if test="supplierName != null  and supplierName != ''">and supplier_name like concat('%', #{supplierName},
                '%')
            </if>
            <if test="shipmentsOrder != null  and shipmentsOrder != ''">and shipments_order like concat('%',
                #{shipmentsOrder}, '%')
            </if>
            <if test="hasReturn != null  and hasReturn != ''">and has_return = #{hasReturn}</if>
            <if test="hasBP != null  and hasBP != ''">and has_b_p = #{hasBP}</if>
            <if test="hasAfterSale != null  and hasAfterSale != ''">and has_after_sale = #{hasAfterSale}</if>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and DATE_FORMAT(create_time, '%Y-%m-%d') between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
            <if test="updateBy != null  and updateBy != ''">and update_by like concat('%', #{updateBy}, '%')</if>
            <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''">
                and DATE_FORMAT(update_time, '%Y-%m-%d') between #{params.beginUpdateTime} and #{params.endUpdateTime}
            </if>
            <if test="deptIds != null and deptIds.size > 0">
                and dept_id in
                <foreach collection="deptIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
        group by storeId
        order by salesPriceCount desc;
    </select>
    <select id="getOperationReport"
            parameterType="com.lz.manage.model.dto.purchaseOrderInfo.PurchaseOrderInfoAndStoreQuery"
            resultType="com.lz.manage.model.vo.purchaseOrderInfo.PurchaseOrderReportByUserVo">
        SELECT s.operation_id AS userId,
        COUNT(DISTINCT s.id) AS storeCount,
        COALESCE(SUM(po.sales_price), 0) AS salesPriceCount,
        COALESCE(SUM(po.sales_number), 0) AS salesNumberCount,
        COALESCE(SUM(po.purchase_price), 0) AS purchasePriceCount,
        COALESCE(SUM(po.purchase_premium), 0) AS purchasePremiumCount,
        COALESCE(SUM(po.order_profit), 0) AS orderProfitCount,
        COALESCE(AVG(po.order_profit_rate), 0) AS avgOrderProfitRate,
        COUNT(po.id) AS orderCount
        FROM tb_store_info s
        LEFT JOIN
        tb_purchase_order_info po ON s.id = po.store_id
        <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
            and po.purchase_channels_id in
            <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
        <if test="orderNumber != null  and orderNumber != ''">and po.order_number like concat('%', #{orderNumber},
            '%')
        </if>
        <if test="orderType != null  and orderType != ''">and po.order_type = #{orderType}</if>
        <if test="params.beginPurchaseTime != null and params.beginPurchaseTime != '' and params.endPurchaseTime != null and params.endPurchaseTime != ''">
            and DATE_FORMAT(po.purchase_time, '%Y-%m-%d') between #{params.beginPurchaseTime} and
            #{params.endPurchaseTime}
        </if>
        <if test="storeId != null ">and po.store_id = #{storeId}</if>
        <if test="buyerNumber != null  and buyerNumber != ''">and po.buyer_number like concat('%', #{buyerNumber},
            '%')
        </if>
        <if test="purchaseChannelType != null  and purchaseChannelType != ''">and po.purchase_channel_type =
            #{purchaseChannelType}
        </if>
        <if test="purchaseChannelsIds != null and purchaseChannelsIds.size > 0">
            and po.purchase_channels_id in
            <foreach collection="purchaseChannelsIds" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
        <if test="purchaseAccountId != null  and purchaseAccountId != ''">and po.purchase_account_id =
            #{purchaseAccountId}
        </if>
        <if test="purchaseOrder != null  and purchaseOrder != ''">and po.purchase_order like concat('%',
            #{purchaseOrder}, '%')
        </if>
        <if test="supplierName != null  and supplierName != ''">and po.supplier_name like concat('%', #{supplierName},
            '%')
        </if>
        <if test="shipmentsOrder != null  and shipmentsOrder != ''">and po.shipments_order like concat('%',
            #{shipmentsOrder}, '%')
        </if>
        <if test="hasReturn != null  and hasReturn != ''">and po.has_return = #{hasReturn}</if>
        <if test="hasBP != null  and hasBP != ''">and po.has_b_p = #{hasBP}</if>
        <if test="hasAfterSale != null  and hasAfterSale != ''">and po.has_after_sale = #{hasAfterSale}</if>
        <if test="userId != null ">and po.user_id = #{userId}</if>
        <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
            and DATE_FORMAT(po.create_time, '%Y-%m-%d') between #{params.beginCreateTime} and #{params.endCreateTime}
        </if>
        <if test="updateBy != null  and updateBy != ''">and po.update_by like concat('%', #{updateBy}, '%')</if>
        <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''">
            and DATE_FORMAT(po.update_time, '%Y-%m-%d') between #{params.beginUpdateTime} and #{params.endUpdateTime}
        </if>
        <if test="deptIds != null and deptIds.size > 0">
            and po.dept_id in
            <foreach collection="deptIds" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        <where>
            <if test="storeId != null">and s.id = #{storeId}</if>
            <if test="principalId != null ">and s.principal_id = #{principalId}</if>
            <if test="operationId != null ">and s.operation_id = #{operationId}</if>
            <if test="serviceId != null ">and s.service_id = #{serviceId}</if>
            <if test="deptIds != null and deptIds.size > 0">
                and s.dept_id in
                <foreach collection="deptIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
        GROUP BY userId
        ORDER BY salesPriceCount DESC;

    </select>

    <insert id="insertPurchaseOrderInfo" parameterType="PurchaseOrderInfo" useGeneratedKeys="true" keyProperty="id">
        insert into tb_purchase_order_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderNumber != null and orderNumber != ''">order_number,</if>
            <if test="orderType != null and orderType != ''">order_type,</if>
            <if test="orderProfit != null">order_profit,</if>
            <if test="orderProfitRate != null">order_profit_rate,</if>
            <if test="purchaseTime != null">purchase_time,</if>
            <if test="storeId != null">store_id,</if>
            <if test="buyerNumber != null">buyer_number,</if>
            <if test="salesNumber != null">sales_number,</if>
            <if test="salesPrice != null">sales_price,</if>
            <if test="purchaseChannelType != null">purchase_channel_type,</if>
            <if test="purchaseChannelsId != null">purchase_channels_id,</if>
            <if test="purchaseAccountId != null">purchase_account_id,</if>
            <if test="purchaseOrder != null">purchase_order,</if>
            <if test="supplierName != null">supplier_name,</if>
            <if test="purchasePrice != null">purchase_price,</if>
            <if test="purchasePremium != null">purchase_premium,</if>
            <if test="shipmentsOrder != null">shipments_order,</if>
            <if test="hasReturn != null">has_return,</if>
            <if test="hasBP != null">has_b_p,</if>
            <if test="hasAfterSale != null">has_after_sale,</if>
            <if test="userId != null">user_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="deptId != null">dept_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderNumber != null and orderNumber != ''">#{orderNumber},</if>
            <if test="orderType != null and orderType != ''">#{orderType},</if>
            <if test="orderProfit != null">#{orderProfit},</if>
            <if test="orderProfitRate != null">#{orderProfitRate},</if>
            <if test="purchaseTime != null">#{purchaseTime},</if>
            <if test="storeId != null">#{storeId},</if>
            <if test="buyerNumber != null">#{buyerNumber},</if>
            <if test="salesNumber != null">#{salesNumber},</if>
            <if test="salesPrice != null">#{salesPrice},</if>
            <if test="purchaseChannelType != null">#{purchaseChannelType},</if>
            <if test="purchaseChannelsId != null">#{purchaseChannelsId},</if>
            <if test="purchaseAccountId != null">#{purchaseAccountId},</if>
            <if test="purchaseOrder != null">#{purchaseOrder},</if>
            <if test="supplierName != null">#{supplierName},</if>
            <if test="purchasePrice != null">#{purchasePrice},</if>
            <if test="purchasePremium != null">#{purchasePremium},</if>
            <if test="shipmentsOrder != null">#{shipmentsOrder},</if>
            <if test="hasReturn != null">#{hasReturn},</if>
            <if test="hasBP != null">#{hasBP},</if>
            <if test="hasAfterSale != null">#{hasAfterSale},</if>
            <if test="userId != null">#{userId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="deptId != null">#{deptId},</if>
        </trim>
    </insert>

    <update id="updatePurchaseOrderInfo" parameterType="PurchaseOrderInfo">
        update tb_purchase_order_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderNumber != null and orderNumber != ''">order_number = #{orderNumber},</if>
            <if test="orderType != null and orderType != ''">order_type = #{orderType},</if>
            <if test="orderProfit != null">order_profit = #{orderProfit},</if>
            <if test="orderProfitRate != null">order_profit_rate = #{orderProfitRate},</if>
            <if test="purchaseTime != null">purchase_time = #{purchaseTime},</if>
            <if test="storeId != null">store_id = #{storeId},</if>
            <if test="buyerNumber != null">buyer_number = #{buyerNumber},</if>
            <if test="salesNumber != null">sales_number = #{salesNumber},</if>
            <if test="salesPrice != null">sales_price = #{salesPrice},</if>
            <if test="purchaseChannelType != null">purchase_channel_type = #{purchaseChannelType},</if>
            <if test="purchaseChannelsId != null">purchase_channels_id = #{purchaseChannelsId},</if>
            <if test="purchaseAccountId != null">purchase_account_id = #{purchaseAccountId},</if>
            <if test="purchaseOrder != null">purchase_order = #{purchaseOrder},</if>
            <if test="supplierName != null">supplier_name = #{supplierName},</if>
            <if test="purchasePrice != null">purchase_price = #{purchasePrice},</if>
            <if test="purchasePremium != null">purchase_premium = #{purchasePremium},</if>
            <if test="shipmentsOrder != null">shipments_order = #{shipmentsOrder},</if>
            <if test="hasReturn != null">has_return = #{hasReturn},</if>
            <if test="hasBP != null">has_b_p = #{hasBP},</if>
            <if test="hasAfterSale != null">has_after_sale = #{hasAfterSale},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePurchaseOrderInfoById" parameterType="Long">
        delete
        from tb_purchase_order_info
        where id = #{id}
    </delete>

    <delete id="deletePurchaseOrderInfoByIds" parameterType="String">
        delete from tb_purchase_order_info where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>